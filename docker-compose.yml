version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: wb-postgres
    environment:
      POSTGRES_USER: wbuser
      POSTGRES_PASSWORD: wbpassword
      POSTGRES_DB: wb_orders
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - wb-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wbuser -d wb_orders"]
      interval: 10s
      timeout: 5s
      retries: 5

  nats-streaming:
    image: nats-streaming:0.25.5
    container_name: nats-streaming
    ports:
      - "4222:4222"
      - "8222:8222"
    command: [
      "--store", "file",
      "--dir", "/data",
      "--cluster_id", "test-cluster",
      "--http_port", "8222"
    ]
    volumes:
      - nats_data:/data
    networks:
      - wb-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8222/"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wb-orders-service
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: wbuser
      DB_PASSWORD: wbpassword
      DB_NAME: wb_orders
      DB_SSLMODE: disable
      NATS_CLUSTER_ID: test-cluster
      NATS_CLIENT_ID: wb-orders-service
      NATS_URL: nats://nats-streaming:4222
      NATS_SUBJECT: orders
      HTTP_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      nats-streaming:
        condition: service_healthy
    networks:
      - wb-network
    restart: unless-stopped

volumes:
  postgres_data:
  nats_data:

networks:
  wb-network:
    driver: bridge
